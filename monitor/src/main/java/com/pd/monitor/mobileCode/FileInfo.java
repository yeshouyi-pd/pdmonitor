
package com.pd.monitor.mobileCode;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "FileInfo", targetNamespace = "http://tempuri.org/", wsdlLocation = "classpath:wsdl.wsdl")
public class FileInfo
    extends Service
{

    private final static URL FILEINFO_WSDL_LOCATION;
    private final static WebServiceException FILEINFO_EXCEPTION;
    private final static QName FILEINFO_QNAME = new QName("http://tempuri.org/", "FileInfo");

    static {
        URL url = null;
        WebServiceException e = null;
        url = FileInfo.class.getClassLoader().getResource("wsdl.wsdl");
        FILEINFO_WSDL_LOCATION = url;
        FILEINFO_EXCEPTION = e;
    }

    public FileInfo() {
        super(__getWsdlLocation(), FILEINFO_QNAME);
    }

    public FileInfo(WebServiceFeature... features) {
        super(__getWsdlLocation(), FILEINFO_QNAME, features);
    }

    public FileInfo(URL wsdlLocation) {
        super(wsdlLocation, FILEINFO_QNAME);
    }

    public FileInfo(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, FILEINFO_QNAME, features);
    }

    public FileInfo(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FileInfo(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns FileInfoSoap
     */
    @WebEndpoint(name = "FileInfoSoap")
    public FileInfoSoap getFileInfoSoap() {

        return super.getPort(new QName("http://tempuri.org/", "FileInfoSoap"), FileInfoSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FileInfoSoap
     */
    @WebEndpoint(name = "FileInfoSoap")
    public FileInfoSoap getFileInfoSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "FileInfoSoap"), FileInfoSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (FILEINFO_EXCEPTION!= null) {
            throw FILEINFO_EXCEPTION;
        }
        return FILEINFO_WSDL_LOCATION;
    }

}
